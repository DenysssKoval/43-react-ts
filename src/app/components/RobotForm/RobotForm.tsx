import React from "react";
import styles from "./RobotForm.module.css";
import { useFormik } from "formik";
import * as Yup from "yup";

interface IFormValues {
  model: string;
  creator: string;
  email: string;
}

export default function RobotForm() {
  const schema = Yup.object().shape({
    model: Yup.number()
      .typeError("–í–≤–µ–¥–∏ —Å–≤–æ–π –Ω–æ–º–µ—Ä, —Ä–æ–±–æ—Ç")
      .required()
      .min(100, "—Ç–≤–æ—è –º–æ–¥–µ–ª—å –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å–æ 100")
      .max(1000, "—Ç—ã –Ω–µ —Ç–∞–∫–æ–π —Ä–æ–±–æ—Ç! –º–æ–¥–µ–ª—å –¥–æ 1000.."),
    creator: Yup.string().required("—Å–∫–∞–∂–∏, –∫—Ç–æ —Ç–≤–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å"),
    email: Yup.string()
      .email("–Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email")
      .required("email –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω"),
  });

  const formik = useFormik({
    initialValues: {
      model: "",
      creator: "",
      email: "",
    } as IFormValues,
    validationSchema: schema,
    validateOnChange: false,
    onSubmit: (values: IFormValues, { resetForm }) => {
      console.log(values);
      resetForm();
    },
  });
  // ! —á—Ç–æ –Ω—É–∂–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤ —Ñ–æ—Ä–º–µ
  // 1. –¥–ª—è form –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞ onSubmit formik.handleSubmit
  // 2. –¥–ª—è input –¥–æ–±–∞–≤–∏—Ç—å –≤ onChange formik.handleChange
  // 3. –¥–ª—è input –¥–æ–±–∞–≤–∏—Ç—å –≤ name –∏–º—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –∫–ª—é—á—É –≤ –æ–±—ä–µ–∫—Ç–µ initialValues –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
  // 4. –¥–ª—è input –¥–æ–±–∞–≤–∏—Ç—å –≤ value –∑–Ω–∞—á–µ–Ω–∏–µ –µ–≥–æ –ø–æ–ª—è –∏–∑ formik.values
  return (
    <>
      <form onSubmit={formik.handleSubmit} className={styles.loginForm}>
        <label> –≠—Ç–æ —Ñ–æ—Ä–º–∞ –¥–ª—è ü§ñ </label>
        <input
          value={formik.values.model}
          name="model"
          onChange={formik.handleChange}
          type="text"
          placeholder="your model"
        />
        <input
          value={formik.values.creator}
          name="creator"
          onChange={formik.handleChange}
          type="text"
          placeholder="creator's name"
        />
        <input
          value={formik.values.email}
          name="email"
          onChange={formik.handleChange}
          type="text"
          placeholder="creator's email"
        />
        <button type="submit">–æ—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
      </form>
      <span className={styles.errors}>{formik.errors.model}</span>
      <span className={styles.errors}>{formik.errors.creator}</span>
      <span className={styles.errors}>{formik.errors.email}</span>
    </>
  );
}
