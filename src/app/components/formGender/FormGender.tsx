import { useFormik } from "formik";
import React, { useState } from "react";
// import styles from '../loginForm/loginForm.module.css'
import styles from "./formGender.module.css";
import * as Yup from "yup";
// ## –∑–∞–¥–∞–Ω–∏–µ

// –°–æ–∑–¥–∞–π—Ç–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç FormGender.tsx
// –í –Ω–µ–º —Å–¥–µ–ª–∞–π—Ç–µ —Ñ–æ—Ä–º—É —Å –æ–¥–Ω–∏–º input –¥–ª—è –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏
// –ù–∞ onSubmit –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ –∏–º—è –≤ api —á–µ—Ä–µ–∑ url `https://api.genderize.io/?name=dmitrii`
// –ü–æ—Å–ª–µ 'name=' –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ —Å—Ç—Ä–æ–∫—É –∏–∑ —Ñ–æ—Ä–º—ã
// –í—ã–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ

// 1. –í FormGender.tsx –¥–æ–±–∞–≤—å—Ç–µ –≤–∞–ª–∏–¥–∞—Ü–∏—é –¥–ª—è —Å—Ç—Ä–æ–∫–∏
// 2. –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∞–±—Å–æ–ª—é—Ç–Ω–æ —Å–ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ input –∏ –≤—ã–≤–µ–¥–µ–Ω–æ –≤ –Ω–µ–±–æ–ª—å—à–æ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ —Å–±–æ–∫—É —Å–Ω–∏–∑—É.

interface IGender {
  name: string;
}
interface IGenderData {
  name: string;
  gender: string;
  probability: number;
  count: number;
}

export default function FormGender() {
	const schema = Yup.object().shape({
		name: Yup
		.string()
		.typeError('enter your name')
		.required('–Ω–∞–ø–∏—à–∏ –∏–º—è')
	});
  const [genderData, setGenderData] = useState<IGenderData>({
    name: "",
    gender: "",
    probability: 0,
    count: 0,
  });

  const fetchGender = async (name: string) => {
    const res = await fetch(`https://api.genderize.io/?name=${name}`);
    const data = await res.json();
    setGenderData(data)
  };
  const formik = useFormik({
    initialValues: {
      name: "",
    } as IGender,
	 validationSchema: schema,
	 validateOnChange: false,
    onSubmit: (values: IGender, { resetForm }) => {
      fetchGender(values.name);
      console.log(values);

      resetForm();
    },
  });

  return (
    <div>
      <h4>üßô‚Äç‚ôÇÔ∏è Know name's genderüëå</h4>

      <form onSubmit={formik.handleSubmit} className={styles.genderForm}>
        <input
          value={formik.values.name}
          name="name"
          onChange={formik.handleChange}
          type="text"
          placeholder="enter name"
        />
        <button type="submit">send request</button>

        {genderData.name && (
          <p>
            {genderData.name} is {genderData.gender === "male" ? "ü§µ" : "üë∞‚Äç‚ôÄÔ∏è"}{" "}
            {genderData.probability * 100}
          </p>
        )}
      </form>
		<span className={styles.errors}>{formik.errors.name}</span>
    </div>
  );
}
